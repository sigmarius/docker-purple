---
- name: Запустить Nginx в Docker с кастомным index.html и default.conf
  hosts: demo
  become: true
  tasks:
    - name: Убедиться, что Docker работает
      ansible.builtin.command: docker info
      changed_when: false

    - name: Запустить контейнер с Nginx и кастомной конфигурацией
      community.docker.docker_container:
        name: my-nginx
        image: nginx:alpine
        ports:
          - "8081:80"
        volumes:
          - /home/sigmarius/dz/index.html:/usr/share/nginx/html/index.html:ro
          - /home/sigmarius/dz/default.conf:/etc/nginx/conf.d/default.conf:ro
        state: started
        restart_policy: always

    - name: Проверить, что контейнер my-nginx запущен
      community.docker.docker_container_info:
        name: my-nginx
      register: container_info

    - name: Убедиться, что контейнер работает
      ansible.builtin.assert:
        that:
          - container_info.container.State.Running
          - "'running' in container_info.container.State.Status"
        fail_msg: "Контейнер my-nginx не запущен!"
        success_msg: "Контейнер my-nginx запущен."

    - name: Получить содержимое страницы через curl (внутри хоста)
      ansible.builtin.shell: |
        curl -s http://localhost:8081
      register: page_result
      retries: 5
      delay: 2
      until: "'Hello Nginx image!' in page_result.stdout"
      changed_when: false

    - name: Проверить, что страница содержит нужный заголовок
      ansible.builtin.assert:
        that:
          - "'Hello Nginx image!' in page_result.stdout"
        fail_msg: "Ошибка: Ожидался текст 'Hello Nginx image!' в index.html"
        success_msg: "Успех: Страница содержит правильный заголовок."

    - name: Вывести содержимое страницы
      ansible.builtin.debug:
        var: page_result.stdout

    - name: Остановить и удалить контейнер my-nginx
      community.docker.docker_container:
        name: my-nginx
        state: absent
